# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


import Registers_pb2

DESCRIPTOR = descriptor.FileDescriptor(
  name='ZTrace.proto',
  package='ztrace',
  serialized_pb='\n\x0cZTrace.proto\x12\x06ztrace\x1a\x0fRegisters.proto\"8\n\rMicroEventLog\x12\x19\n\x11start_instruction\x18\x01 \x02(\x04\x12\x0c\n\x04\x64\x61ta\x18\x02 \x02(\x0c\"=\n\x0eInsDisassembly\x12\n\n\x02pc\x18\x01 \x02(\x04\x12\x0c\n\x04text\x18\x02 \x02(\t\x12\x11\n\traw_bytes\x18\x03 \x01(\x0c\"<\n\x0e\x42\x42LDisassembly\x12*\n\nins_disasm\x18\x01 \x03(\x0b\x32\x16.ztrace.InsDisassembly\">\n\x10TraceDisassembly\x12*\n\nbbl_disasm\x18\x01 \x03(\x0b\x32\x16.ztrace.BBLDisassembly\"\xd7\x05\n\x07Section\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x02(\x04\x12\x0c\n\x04size\x18\x03 \x02(\x04\x12)\n\x04type\x18\x04 \x02(\x0e\x32\x1b.ztrace.Section.SectionType\x12\x0e\n\x06mapped\x18\x05 \x02(\x08\x12\x13\n\x0bis_readable\x18\x06 \x02(\x08\x12\x14\n\x0cis_writeable\x18\x07 \x02(\x08\x12\x15\n\ris_executable\x18\x08 \x02(\x08\"\xa1\x04\n\x0bSectionType\x12\x14\n\x10SEC_TYPE_INVALID\x10\x00\x12\x13\n\x0fSEC_TYPE_UNUSED\x10\x01\x12\x13\n\x0fSEC_TYPE_REGREL\x10\x02\x12\x13\n\x0fSEC_TYPE_DYNREL\x10\x03\x12\x11\n\rSEC_TYPE_EXEC\x10\x04\x12\x11\n\rSEC_TYPE_DATA\x10\x05\x12\x14\n\x10SEC_TYPE_DYNAMIC\x10\x06\x12\x10\n\x0cSEC_TYPE_OPD\x10\x07\x12\x10\n\x0cSEC_TYPE_GOT\x10\x08\x12\x12\n\x0eSEC_TYPE_STACK\x10\t\x12\x13\n\x0fSEC_TYPE_PLTOFF\x10\n\x12\x11\n\rSEC_TYPE_HASH\x10\x0b\x12\x11\n\rSEC_TYPE_LSDA\x10\x0c\x12\x13\n\x0fSEC_TYPE_UNWIND\x10\r\x12\x17\n\x13SEC_TYPE_UNWINDINFO\x10\x0e\x12\x13\n\x0fSEC_TYPE_REGSYM\x10\x0f\x12\x13\n\x0fSEC_TYPE_DYNSYM\x10\x10\x12\x12\n\x0eSEC_TYPE_DEBUG\x10\x11\x12\x10\n\x0cSEC_TYPE_BSS\x10\x12\x12\x13\n\x0fSEC_TYPE_SYMSTR\x10\x13\x12\x13\n\x0fSEC_TYPE_DYNSTR\x10\x14\x12\x13\n\x0fSEC_TYPE_SECSTR\x10\x15\x12\x14\n\x10SEC_TYPE_COMMENT\x10\x16\x12\x11\n\rSEC_TYPE_LOOS\x10\x17\x12\x11\n\rSEC_TYPE_USER\x10\x18\x12\x15\n\x10SEC_TYPE_UNKNOWN\x10\xe7\x07\"\x9d\x03\n\nModuleLoad\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x13\n\x0blow_address\x18\x03 \x02(\x04\x12\x14\n\x0chigh_address\x18\x04 \x02(\x04\x12\x13\n\x0bload_offset\x18\x05 \x02(\x04\x12\x30\n\nimage_type\x18\x06 \x02(\x0e\x32\x1c.ztrace.ModuleLoad.ImageType\x12\x1a\n\x12is_main_executable\x18\x07 \x02(\x08\x12\x1c\n\x14is_static_executable\x18\x08 \x02(\x08\x12 \n\x07section\x18\t \x03(\x0b\x32\x0f.ztrace.Section\x12\x10\n\x08\x63ontents\x18\n \x01(\x0c\"\x94\x01\n\tImageType\x12\x14\n\x10IMG_TYPE_INVALID\x10\x00\x12\x13\n\x0fIMG_TYPE_STATIC\x10\x01\x12\x13\n\x0fIMG_TYPE_SHARED\x10\x02\x12\x16\n\x12IMG_TYPE_SHAREDLIB\x10\x03\x12\x18\n\x14IMG_TYPE_RELOCATABLE\x10\x04\x12\x15\n\x10IMG_TYPE_UNKNOWN\x10\xe7\x07\"\x1a\n\x0cModuleUnload\x12\n\n\x02id\x18\x01 \x02(\r\"l\n\x0bSymbolEntry\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x02(\x04\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x18\n\x10undecorated_name\x18\x03 \x02(\t\x12\x12\n\nis_dynamic\x18\x04 \x02(\x08\x12\x10\n\x08is_ifunc\x18\x05 \x02(\x08\"Y\n\rModuleSymbols\x12\x11\n\tmodule_id\x18\x01 \x02(\r\x12\x13\n\x0bmodule_name\x18\x02 \x02(\t\x12 \n\x03sym\x18\x03 \x03(\x0b\x32\x13.ztrace.SymbolEntry\" \n\x06Malloc\x12\t\n\x01n\x18\x01 \x02(\x04\x12\x0b\n\x03ret\x18\x02 \x02(\x04\" \n\x06\x43\x61lloc\x12\t\n\x01n\x18\x01 \x02(\x04\x12\x0b\n\x03ret\x18\x02 \x02(\x04\"\x11\n\x04\x46ree\x12\t\n\x01p\x18\x01 \x02(\x04\",\n\x07Realloc\x12\t\n\x01p\x18\x01 \x02(\x04\x12\t\n\x01n\x18\x02 \x02(\x04\x12\x0b\n\x03ret\x18\x03 \x02(\x04\"m\n\rHeapOperation\x12\x1e\n\x06malloc\x18\x01 \x01(\x0b\x32\x0e.ztrace.Malloc\x12\x1a\n\x04\x66ree\x18\x02 \x01(\x0b\x32\x0c.ztrace.Free\x12 \n\x07realloc\x18\x03 \x01(\x0b\x32\x0f.ztrace.Realloc\"*\n\x05Value\x12\x10\n\x08v_uint64\x18\x01 \x01(\x04\x12\x0f\n\x07v_int64\x18\x02 \x01(\x03\"0\n\x10\x46unctionArgument\x12\x1c\n\x05value\x18\x01 \x02(\x0b\x32\r.ztrace.Value\"g\n\x0c\x46unctionCall\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x11\n\tmodule_id\x18\x02 \x02(\r\x12\x1a\n\x03ret\x18\x03 \x01(\x0b\x32\r.ztrace.Value\x12\x1a\n\x03\x61rg\x18\x04 \x03(\x0b\x32\r.ztrace.Value\"\x1c\n\x0bThreadStart\x12\r\n\x05\x66lags\x18\x01 \x02(\r\"\x1a\n\tThreadEnd\x12\r\n\x05\x66lags\x18\x02 \x02(\r\"&\n\tTimestamp\x12\x0b\n\x03sec\x18\x01 \x02(\r\x12\x0c\n\x04usec\x18\x02 \x02(\r\"\x93\x01\n\nTraceStart\x12$\n\ttimestamp\x18\x01 \x02(\x0b\x32\x11.ztrace.Timestamp\x12\x1a\n\x04\x61rch\x18\x02 \x02(\x0e\x32\x0c.ztrace.Arch\x12\x10\n\x08software\x18\x03 \x01(\t\x12\x0e\n\x06target\x18\x04 \x01(\t\x12\x0f\n\x07\x63mdline\x18\x05 \x01(\t\x12\x10\n\x08os_uname\x18\x06 \x01(\t\"0\n\x08TraceEnd\x12$\n\ttimestamp\x18\x02 \x02(\x0b\x32\x11.ztrace.Timestamp\"9\n\x10MicroEventLogPtr\x12\x0b\n\x03tid\x18\x01 \x02(\r\x12\x18\n\x10next_instruction\x18\x02 \x02(\r\"\xd4\x04\n\x05\x45vent\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0b\n\x03pid\x18\x02 \x02(\r\x12\x0b\n\x03tid\x18\x03 \x02(\r\x12+\n\tcross_ref\x18\x64 \x03(\x0b\x32\x18.ztrace.MicroEventLogPtr\x12\'\n\x0btrace_start\x18\n \x01(\x0b\x32\x12.ztrace.TraceStart\x12#\n\ttrace_end\x18\x0b \x01(\x0b\x32\x10.ztrace.TraceEnd\x12)\n\x0cthread_start\x18\x14 \x01(\x0b\x32\x13.ztrace.ThreadStart\x12%\n\nthread_end\x18\x15 \x01(\x0b\x32\x11.ztrace.ThreadEnd\x12.\n\x0ctrace_disasm\x18\x1e \x01(\x0b\x32\x18.ztrace.TraceDisassembly\x12$\n\x08mod_load\x18( \x01(\x0b\x32\x12.ztrace.ModuleLoad\x12(\n\nmod_unload\x18) \x01(\x0b\x32\x14.ztrace.ModuleUnload\x12*\n\x0bmod_symbols\x18* \x01(\x0b\x32\x15.ztrace.ModuleSymbols\x12.\n\x0fmicro_event_log\x18\x32 \x01(\x0b\x32\x15.ztrace.MicroEventLog\x12\x1e\n\x06malloc\x18< \x01(\x0b\x32\x0e.ztrace.Malloc\x12 \n\x07realloc\x18= \x01(\x0b\x32\x0f.ztrace.Realloc\x12\x1a\n\x04\x66ree\x18> \x01(\x0b\x32\x0c.ztrace.Free\x12\x1e\n\x06\x63\x61lloc\x18? \x01(\x0b\x32\x0e.ztrace.Calloc*%\n\x04\x41rch\x12\x0c\n\x08\x41RCH_X86\x10\x01\x12\x0f\n\x0b\x41RCH_X86_64\x10\x02')

_ARCH = descriptor.EnumDescriptor(
  name='Arch',
  full_name='ztrace.Arch',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='ARCH_X86', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='ARCH_X86_64', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3062,
  serialized_end=3099,
)


ARCH_X86 = 1
ARCH_X86_64 = 2


_SECTION_SECTIONTYPE = descriptor.EnumDescriptor(
  name='SectionType',
  full_name='ztrace.Section.SectionType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_INVALID', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_UNUSED', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_REGREL', index=2, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_DYNREL', index=3, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_EXEC', index=4, number=4,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_DATA', index=5, number=5,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_DYNAMIC', index=6, number=6,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_OPD', index=7, number=7,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_GOT', index=8, number=8,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_STACK', index=9, number=9,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_PLTOFF', index=10, number=10,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_HASH', index=11, number=11,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_LSDA', index=12, number=12,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_UNWIND', index=13, number=13,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_UNWINDINFO', index=14, number=14,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_REGSYM', index=15, number=15,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_DYNSYM', index=16, number=16,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_DEBUG', index=17, number=17,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_BSS', index=18, number=18,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_SYMSTR', index=19, number=19,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_DYNSTR', index=20, number=20,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_SECSTR', index=21, number=21,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_COMMENT', index=22, number=22,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_LOOS', index=23, number=23,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_USER', index=24, number=24,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SEC_TYPE_UNKNOWN', index=25, number=999,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=471,
  serialized_end=1016,
)

_MODULELOAD_IMAGETYPE = descriptor.EnumDescriptor(
  name='ImageType',
  full_name='ztrace.ModuleLoad.ImageType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='IMG_TYPE_INVALID', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='IMG_TYPE_STATIC', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='IMG_TYPE_SHARED', index=2, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='IMG_TYPE_SHAREDLIB', index=3, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='IMG_TYPE_RELOCATABLE', index=4, number=4,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='IMG_TYPE_UNKNOWN', index=5, number=999,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1284,
  serialized_end=1432,
)


_MICROEVENTLOG = descriptor.Descriptor(
  name='MicroEventLog',
  full_name='ztrace.MicroEventLog',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='start_instruction', full_name='ztrace.MicroEventLog.start_instruction', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='data', full_name='ztrace.MicroEventLog.data', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=41,
  serialized_end=97,
)


_INSDISASSEMBLY = descriptor.Descriptor(
  name='InsDisassembly',
  full_name='ztrace.InsDisassembly',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='pc', full_name='ztrace.InsDisassembly.pc', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='text', full_name='ztrace.InsDisassembly.text', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='raw_bytes', full_name='ztrace.InsDisassembly.raw_bytes', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=99,
  serialized_end=160,
)


_BBLDISASSEMBLY = descriptor.Descriptor(
  name='BBLDisassembly',
  full_name='ztrace.BBLDisassembly',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='ins_disasm', full_name='ztrace.BBLDisassembly.ins_disasm', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=162,
  serialized_end=222,
)


_TRACEDISASSEMBLY = descriptor.Descriptor(
  name='TraceDisassembly',
  full_name='ztrace.TraceDisassembly',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='bbl_disasm', full_name='ztrace.TraceDisassembly.bbl_disasm', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=224,
  serialized_end=286,
)


_SECTION = descriptor.Descriptor(
  name='Section',
  full_name='ztrace.Section',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='name', full_name='ztrace.Section.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='address', full_name='ztrace.Section.address', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='size', full_name='ztrace.Section.size', index=2,
      number=3, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='type', full_name='ztrace.Section.type', index=3,
      number=4, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='mapped', full_name='ztrace.Section.mapped', index=4,
      number=5, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='is_readable', full_name='ztrace.Section.is_readable', index=5,
      number=6, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='is_writeable', full_name='ztrace.Section.is_writeable', index=6,
      number=7, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='is_executable', full_name='ztrace.Section.is_executable', index=7,
      number=8, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SECTION_SECTIONTYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=289,
  serialized_end=1016,
)


_MODULELOAD = descriptor.Descriptor(
  name='ModuleLoad',
  full_name='ztrace.ModuleLoad',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='id', full_name='ztrace.ModuleLoad.id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='name', full_name='ztrace.ModuleLoad.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='low_address', full_name='ztrace.ModuleLoad.low_address', index=2,
      number=3, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='high_address', full_name='ztrace.ModuleLoad.high_address', index=3,
      number=4, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='load_offset', full_name='ztrace.ModuleLoad.load_offset', index=4,
      number=5, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='image_type', full_name='ztrace.ModuleLoad.image_type', index=5,
      number=6, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='is_main_executable', full_name='ztrace.ModuleLoad.is_main_executable', index=6,
      number=7, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='is_static_executable', full_name='ztrace.ModuleLoad.is_static_executable', index=7,
      number=8, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='section', full_name='ztrace.ModuleLoad.section', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='contents', full_name='ztrace.ModuleLoad.contents', index=9,
      number=10, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _MODULELOAD_IMAGETYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1019,
  serialized_end=1432,
)


_MODULEUNLOAD = descriptor.Descriptor(
  name='ModuleUnload',
  full_name='ztrace.ModuleUnload',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='id', full_name='ztrace.ModuleUnload.id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1434,
  serialized_end=1460,
)


_SYMBOLENTRY = descriptor.Descriptor(
  name='SymbolEntry',
  full_name='ztrace.SymbolEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='address', full_name='ztrace.SymbolEntry.address', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='name', full_name='ztrace.SymbolEntry.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='undecorated_name', full_name='ztrace.SymbolEntry.undecorated_name', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='is_dynamic', full_name='ztrace.SymbolEntry.is_dynamic', index=3,
      number=4, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='is_ifunc', full_name='ztrace.SymbolEntry.is_ifunc', index=4,
      number=5, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1462,
  serialized_end=1570,
)


_MODULESYMBOLS = descriptor.Descriptor(
  name='ModuleSymbols',
  full_name='ztrace.ModuleSymbols',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='module_id', full_name='ztrace.ModuleSymbols.module_id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='module_name', full_name='ztrace.ModuleSymbols.module_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='sym', full_name='ztrace.ModuleSymbols.sym', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1572,
  serialized_end=1661,
)


_MALLOC = descriptor.Descriptor(
  name='Malloc',
  full_name='ztrace.Malloc',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='n', full_name='ztrace.Malloc.n', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ret', full_name='ztrace.Malloc.ret', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1663,
  serialized_end=1695,
)


_CALLOC = descriptor.Descriptor(
  name='Calloc',
  full_name='ztrace.Calloc',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='n', full_name='ztrace.Calloc.n', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ret', full_name='ztrace.Calloc.ret', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1697,
  serialized_end=1729,
)


_FREE = descriptor.Descriptor(
  name='Free',
  full_name='ztrace.Free',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='p', full_name='ztrace.Free.p', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1731,
  serialized_end=1748,
)


_REALLOC = descriptor.Descriptor(
  name='Realloc',
  full_name='ztrace.Realloc',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='p', full_name='ztrace.Realloc.p', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='n', full_name='ztrace.Realloc.n', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ret', full_name='ztrace.Realloc.ret', index=2,
      number=3, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1750,
  serialized_end=1794,
)


_HEAPOPERATION = descriptor.Descriptor(
  name='HeapOperation',
  full_name='ztrace.HeapOperation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='malloc', full_name='ztrace.HeapOperation.malloc', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='free', full_name='ztrace.HeapOperation.free', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='realloc', full_name='ztrace.HeapOperation.realloc', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1796,
  serialized_end=1905,
)


_VALUE = descriptor.Descriptor(
  name='Value',
  full_name='ztrace.Value',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='v_uint64', full_name='ztrace.Value.v_uint64', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='v_int64', full_name='ztrace.Value.v_int64', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1907,
  serialized_end=1949,
)


_FUNCTIONARGUMENT = descriptor.Descriptor(
  name='FunctionArgument',
  full_name='ztrace.FunctionArgument',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='value', full_name='ztrace.FunctionArgument.value', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1951,
  serialized_end=1999,
)


_FUNCTIONCALL = descriptor.Descriptor(
  name='FunctionCall',
  full_name='ztrace.FunctionCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='name', full_name='ztrace.FunctionCall.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='module_id', full_name='ztrace.FunctionCall.module_id', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ret', full_name='ztrace.FunctionCall.ret', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='arg', full_name='ztrace.FunctionCall.arg', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2001,
  serialized_end=2104,
)


_THREADSTART = descriptor.Descriptor(
  name='ThreadStart',
  full_name='ztrace.ThreadStart',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='flags', full_name='ztrace.ThreadStart.flags', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2106,
  serialized_end=2134,
)


_THREADEND = descriptor.Descriptor(
  name='ThreadEnd',
  full_name='ztrace.ThreadEnd',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='flags', full_name='ztrace.ThreadEnd.flags', index=0,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2136,
  serialized_end=2162,
)


_TIMESTAMP = descriptor.Descriptor(
  name='Timestamp',
  full_name='ztrace.Timestamp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='sec', full_name='ztrace.Timestamp.sec', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='usec', full_name='ztrace.Timestamp.usec', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2164,
  serialized_end=2202,
)


_TRACESTART = descriptor.Descriptor(
  name='TraceStart',
  full_name='ztrace.TraceStart',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='timestamp', full_name='ztrace.TraceStart.timestamp', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='arch', full_name='ztrace.TraceStart.arch', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='software', full_name='ztrace.TraceStart.software', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='target', full_name='ztrace.TraceStart.target', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='cmdline', full_name='ztrace.TraceStart.cmdline', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='os_uname', full_name='ztrace.TraceStart.os_uname', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2205,
  serialized_end=2352,
)


_TRACEEND = descriptor.Descriptor(
  name='TraceEnd',
  full_name='ztrace.TraceEnd',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='timestamp', full_name='ztrace.TraceEnd.timestamp', index=0,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2354,
  serialized_end=2402,
)


_MICROEVENTLOGPTR = descriptor.Descriptor(
  name='MicroEventLogPtr',
  full_name='ztrace.MicroEventLogPtr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='tid', full_name='ztrace.MicroEventLogPtr.tid', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='next_instruction', full_name='ztrace.MicroEventLogPtr.next_instruction', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2404,
  serialized_end=2461,
)


_EVENT = descriptor.Descriptor(
  name='Event',
  full_name='ztrace.Event',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='id', full_name='ztrace.Event.id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='pid', full_name='ztrace.Event.pid', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='tid', full_name='ztrace.Event.tid', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='cross_ref', full_name='ztrace.Event.cross_ref', index=3,
      number=100, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='trace_start', full_name='ztrace.Event.trace_start', index=4,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='trace_end', full_name='ztrace.Event.trace_end', index=5,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='thread_start', full_name='ztrace.Event.thread_start', index=6,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='thread_end', full_name='ztrace.Event.thread_end', index=7,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='trace_disasm', full_name='ztrace.Event.trace_disasm', index=8,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='mod_load', full_name='ztrace.Event.mod_load', index=9,
      number=40, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='mod_unload', full_name='ztrace.Event.mod_unload', index=10,
      number=41, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='mod_symbols', full_name='ztrace.Event.mod_symbols', index=11,
      number=42, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='micro_event_log', full_name='ztrace.Event.micro_event_log', index=12,
      number=50, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='malloc', full_name='ztrace.Event.malloc', index=13,
      number=60, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='realloc', full_name='ztrace.Event.realloc', index=14,
      number=61, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='free', full_name='ztrace.Event.free', index=15,
      number=62, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='calloc', full_name='ztrace.Event.calloc', index=16,
      number=63, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2464,
  serialized_end=3060,
)

_BBLDISASSEMBLY.fields_by_name['ins_disasm'].message_type = _INSDISASSEMBLY
_TRACEDISASSEMBLY.fields_by_name['bbl_disasm'].message_type = _BBLDISASSEMBLY
_SECTION.fields_by_name['type'].enum_type = _SECTION_SECTIONTYPE
_SECTION_SECTIONTYPE.containing_type = _SECTION;
_MODULELOAD.fields_by_name['image_type'].enum_type = _MODULELOAD_IMAGETYPE
_MODULELOAD.fields_by_name['section'].message_type = _SECTION
_MODULELOAD_IMAGETYPE.containing_type = _MODULELOAD;
_MODULESYMBOLS.fields_by_name['sym'].message_type = _SYMBOLENTRY
_HEAPOPERATION.fields_by_name['malloc'].message_type = _MALLOC
_HEAPOPERATION.fields_by_name['free'].message_type = _FREE
_HEAPOPERATION.fields_by_name['realloc'].message_type = _REALLOC
_FUNCTIONARGUMENT.fields_by_name['value'].message_type = _VALUE
_FUNCTIONCALL.fields_by_name['ret'].message_type = _VALUE
_FUNCTIONCALL.fields_by_name['arg'].message_type = _VALUE
_TRACESTART.fields_by_name['timestamp'].message_type = _TIMESTAMP
_TRACESTART.fields_by_name['arch'].enum_type = _ARCH
_TRACEEND.fields_by_name['timestamp'].message_type = _TIMESTAMP
_EVENT.fields_by_name['cross_ref'].message_type = _MICROEVENTLOGPTR
_EVENT.fields_by_name['trace_start'].message_type = _TRACESTART
_EVENT.fields_by_name['trace_end'].message_type = _TRACEEND
_EVENT.fields_by_name['thread_start'].message_type = _THREADSTART
_EVENT.fields_by_name['thread_end'].message_type = _THREADEND
_EVENT.fields_by_name['trace_disasm'].message_type = _TRACEDISASSEMBLY
_EVENT.fields_by_name['mod_load'].message_type = _MODULELOAD
_EVENT.fields_by_name['mod_unload'].message_type = _MODULEUNLOAD
_EVENT.fields_by_name['mod_symbols'].message_type = _MODULESYMBOLS
_EVENT.fields_by_name['micro_event_log'].message_type = _MICROEVENTLOG
_EVENT.fields_by_name['malloc'].message_type = _MALLOC
_EVENT.fields_by_name['realloc'].message_type = _REALLOC
_EVENT.fields_by_name['free'].message_type = _FREE
_EVENT.fields_by_name['calloc'].message_type = _CALLOC
DESCRIPTOR.message_types_by_name['MicroEventLog'] = _MICROEVENTLOG
DESCRIPTOR.message_types_by_name['InsDisassembly'] = _INSDISASSEMBLY
DESCRIPTOR.message_types_by_name['BBLDisassembly'] = _BBLDISASSEMBLY
DESCRIPTOR.message_types_by_name['TraceDisassembly'] = _TRACEDISASSEMBLY
DESCRIPTOR.message_types_by_name['Section'] = _SECTION
DESCRIPTOR.message_types_by_name['ModuleLoad'] = _MODULELOAD
DESCRIPTOR.message_types_by_name['ModuleUnload'] = _MODULEUNLOAD
DESCRIPTOR.message_types_by_name['SymbolEntry'] = _SYMBOLENTRY
DESCRIPTOR.message_types_by_name['ModuleSymbols'] = _MODULESYMBOLS
DESCRIPTOR.message_types_by_name['Malloc'] = _MALLOC
DESCRIPTOR.message_types_by_name['Calloc'] = _CALLOC
DESCRIPTOR.message_types_by_name['Free'] = _FREE
DESCRIPTOR.message_types_by_name['Realloc'] = _REALLOC
DESCRIPTOR.message_types_by_name['HeapOperation'] = _HEAPOPERATION
DESCRIPTOR.message_types_by_name['Value'] = _VALUE
DESCRIPTOR.message_types_by_name['FunctionArgument'] = _FUNCTIONARGUMENT
DESCRIPTOR.message_types_by_name['FunctionCall'] = _FUNCTIONCALL
DESCRIPTOR.message_types_by_name['ThreadStart'] = _THREADSTART
DESCRIPTOR.message_types_by_name['ThreadEnd'] = _THREADEND
DESCRIPTOR.message_types_by_name['Timestamp'] = _TIMESTAMP
DESCRIPTOR.message_types_by_name['TraceStart'] = _TRACESTART
DESCRIPTOR.message_types_by_name['TraceEnd'] = _TRACEEND
DESCRIPTOR.message_types_by_name['MicroEventLogPtr'] = _MICROEVENTLOGPTR
DESCRIPTOR.message_types_by_name['Event'] = _EVENT

class MicroEventLog(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MICROEVENTLOG
  
  # @@protoc_insertion_point(class_scope:ztrace.MicroEventLog)

class InsDisassembly(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _INSDISASSEMBLY
  
  # @@protoc_insertion_point(class_scope:ztrace.InsDisassembly)

class BBLDisassembly(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _BBLDISASSEMBLY
  
  # @@protoc_insertion_point(class_scope:ztrace.BBLDisassembly)

class TraceDisassembly(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TRACEDISASSEMBLY
  
  # @@protoc_insertion_point(class_scope:ztrace.TraceDisassembly)

class Section(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SECTION
  
  # @@protoc_insertion_point(class_scope:ztrace.Section)

class ModuleLoad(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MODULELOAD
  
  # @@protoc_insertion_point(class_scope:ztrace.ModuleLoad)

class ModuleUnload(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MODULEUNLOAD
  
  # @@protoc_insertion_point(class_scope:ztrace.ModuleUnload)

class SymbolEntry(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SYMBOLENTRY
  
  # @@protoc_insertion_point(class_scope:ztrace.SymbolEntry)

class ModuleSymbols(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MODULESYMBOLS
  
  # @@protoc_insertion_point(class_scope:ztrace.ModuleSymbols)

class Malloc(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MALLOC
  
  # @@protoc_insertion_point(class_scope:ztrace.Malloc)

class Calloc(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CALLOC
  
  # @@protoc_insertion_point(class_scope:ztrace.Calloc)

class Free(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FREE
  
  # @@protoc_insertion_point(class_scope:ztrace.Free)

class Realloc(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _REALLOC
  
  # @@protoc_insertion_point(class_scope:ztrace.Realloc)

class HeapOperation(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _HEAPOPERATION
  
  # @@protoc_insertion_point(class_scope:ztrace.HeapOperation)

class Value(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _VALUE
  
  # @@protoc_insertion_point(class_scope:ztrace.Value)

class FunctionArgument(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FUNCTIONARGUMENT
  
  # @@protoc_insertion_point(class_scope:ztrace.FunctionArgument)

class FunctionCall(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FUNCTIONCALL
  
  # @@protoc_insertion_point(class_scope:ztrace.FunctionCall)

class ThreadStart(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _THREADSTART
  
  # @@protoc_insertion_point(class_scope:ztrace.ThreadStart)

class ThreadEnd(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _THREADEND
  
  # @@protoc_insertion_point(class_scope:ztrace.ThreadEnd)

class Timestamp(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TIMESTAMP
  
  # @@protoc_insertion_point(class_scope:ztrace.Timestamp)

class TraceStart(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TRACESTART
  
  # @@protoc_insertion_point(class_scope:ztrace.TraceStart)

class TraceEnd(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TRACEEND
  
  # @@protoc_insertion_point(class_scope:ztrace.TraceEnd)

class MicroEventLogPtr(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MICROEVENTLOGPTR
  
  # @@protoc_insertion_point(class_scope:ztrace.MicroEventLogPtr)

class Event(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _EVENT
  
  # @@protoc_insertion_point(class_scope:ztrace.Event)

# @@protoc_insertion_point(module_scope)
